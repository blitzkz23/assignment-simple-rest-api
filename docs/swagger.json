{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/orders": {
            "get": {
                "description": "Retrieving All Order With Related Items",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "operationId": "get-all-orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Order"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create New Movie Data With Ordered Items.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "operationId": "create-new-orders",
                "parameters": [
                    {
                        "description": "request body json",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.NewOrderItemsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.OrderItemsResponse"
                        }
                    }
                }
            }
        },
        "/orders/{userID}": {
            "put": {
                "description": "Update existing order by ID and its items if needed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "operationId": "update-orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.OrderItemsResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Update existing order by ID and its items if needed",
                "tags": [
                    "orders"
                ],
                "operationId": "delete-orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order Deleted",
                        "schema": {
                            "$ref": "#/definitions/dto.OrderDeletedResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.EmbeddedItemsRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "item_code": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "dto.EmbeddedItemsResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "item_code": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "dto.NewOrderItemsRequest": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EmbeddedItemsRequest"
                    }
                }
            }
        },
        "dto.OrderDeletedResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.OrderItemsResponse": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EmbeddedItemsResponse"
                    }
                },
                "order_id": {
                    "type": "integer"
                },
                "ordered_at": {
                    "type": "string"
                }
            }
        },
        "entity.Item": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "item_code": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "entity.Order": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Item"
                    }
                },
                "ordered_at": {
                    "type": "string"
                }
            }
        }
    }
}